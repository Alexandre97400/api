{
    "swagger": "2.0",
    "info": {
        "version": "0.0.1",
        "title": "Communecter API"
    },
    "host": "127.0.0.1:80",
    "basePath": "/ph/api",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "parameters": {
        "person-id": {
            "name": "person-id",
            "in": "path",
            "description": "The person identifier string",
            "type": "string",
            "required": true
        },
        "organization-id": {
            "name": "organization-id",
            "in": "path",
            "description": "The organization identifier string",
            "type": "string",
            "required": true
        },
        "event-id": {
            "name": "event-id",
            "in": "path",
            "description": "The event identifier string",
            "type": "string",
            "required": true
        },
        "project-id": {
            "name": "project-id",
            "in": "path",
            "description": "The project identifier string",
            "type": "string",
            "required": true
        }
    },
    "paths": {
        "/person/get": {
            "get": {
                "tags": [
                    "Person"
                ],
                "description": "Get information about all persons.",
                "responses": {
                    "200": {
                        "description": "The list of person.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Person"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/person/get/id/{person-id}": {
            "get": {
                "tags": [
                    "Person"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/person-id"
                    }
                ],
                "description": "Get information about a person.",
                "responses": {
                    "200": {
                        "description": "The person object",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Person"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/person/authenticate": {
            "post": {
                "tags": [
                    "Person"
                ],
                "description": "Authenticate.",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "email",
                        "description": "Email of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "pwd",
                        "description": "Password of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of authenticate.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/person/changepassword": {
            "post": {
                "tags": [
                    "Person"
                ],
                "description": "Modify user password .",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "id",
                        "description": "Id of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "mode",
                        "description": "You have to put the mode in \"changePassword\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "newPassword",
                        "description": "New password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "oldPassword",
                        "description": "Old password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of changepassword.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/person/register": {
            "post": {
                "tags": [
                    "Person"
                ],
                "description": "Sign in to Communecter .",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "User firstname and name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "username",
                        "description": "Username of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "description": "User email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "pwd",
                        "description": "User password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of changepassword.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/person/getuseridbymail": {
            "post": {
                "tags": [
                    "Person"
                ],
                "description": "Get User Id by mail .",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "mail",
                        "description": "User mail",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/person/updatefield": {
            "post": {
                "tags": [
                    "Person"
                ],
                "description": "Update field of the user .",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "id",
                        "description": "Id of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "The name of field.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "value",
                        "description": "The value of field.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of authenticate.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organization/get": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "description": "Get information about all organizations.",
                "responses": {
                    "200": {
                        "description": "The list of organization",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Organization"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organization/get/id/{organization-id}": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/organization-id"
                    }
                ],
                "description": "Get information about a organization.",
                "responses": {
                    "200": {
                        "description": "The organization object",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Organization"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organization/updatefield": {
            "post": {
                "tags": [
                    "Organization"
                ],
                "description": "Update field of the organization .",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "id",
                        "description": "Id of organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "The name of field.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "value",
                        "description": "The value of field.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of authenticate.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/event/get": {
            "get": {
                "tags": [
                    "Event"
                ],
                "description": "Get information about all events.",
                "responses": {
                    "200": {
                        "description": "The list of events",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Event"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/event/get/id/{event-id}": {
            "get": {
                "tags": [
                    "Event"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/event-id"
                    }
                ],
                "description": "Get information about a event.",
                "responses": {
                    "200": {
                        "description": "The event object",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Event"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/event/updatefield": {
            "post": {
                "tags": [
                    "Event"
                ],
                "description": "Update field of the event .",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "id",
                        "description": "Id of event",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "The name of field.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "value",
                        "description": "The value of field.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of authenticate.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/get": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Get information about all projects.",
                "responses": {
                    "200": {
                        "description": "The list of projects.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Project"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/get/id/{project-id}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/project-id"
                    }
                ],
                "description": "Get information about a project.",
                "responses": {
                    "200": {
                        "description": "The project object",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Project"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/updatefield": {
            "post": {
                "tags": [
                    "Project"
                ],
                "description": "Update field of the project .",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "id",
                        "description": "Id of project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "description": "The name of field.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "value",
                        "description": "The value of field.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of authenticate.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/link/follow": {
            "post": {
                "tags": [
                    "Link"
                ],
                "description": "Follow a entity (Person|Organization|Project) .",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "childId",
                        "description": "User id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "childType",
                        "description": "User Type = \"citoyens\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "parentId",
                        "description": "Entity id.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "parentType",
                        "description": "Entity type = citoyens|organizations|projects.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of authenticate.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/link/connect": {
            "post": {
                "tags": [
                    "Link"
                ],
                "description": "Connect a entity (child)  with other entity (parent). Entity = ( 'Person' | 'Organization' | 'Project '| 'Event' )",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "childId",
                        "description": "User id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "childType",
                        "description": "Entity type = citoyens|organizations|projects|events.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "parentId",
                        "description": "Entity id.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "parentType",
                        "description": "Entity type = citoyens|organizations|projects|events.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "connectType",
                        "description": "Use case with connectType = \"member\",\"admin\", \"contributor\" or \"attendee\" .",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of authenticate.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/link/disconnect": {
            "post": {
                "tags": [
                    "Link"
                ],
                "description": "Remove link betweent two entity",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "childId",
                        "description": "User id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "childType",
                        "description": "Entity type = citoyens|organizations|projects|events.",
                        "required": true,
                        "items": {
                            "type": "string"
                        },
                        "enum": [
                            "citoyens",
                            "organizations",
                            "projects",
                            "events"
                        ],
                        "type": "array"
                    },
                    {
                        "in": "formData",
                        "name": "parentId",
                        "description": "Entity id.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "parentType",
                        "description": "Entity type = citoyens|organizations|projects|events.",
                        "required": true,
                        "items": {
                            "type": "string"
                        },
                        "enum": [
                            "citoyens",
                            "organizations",
                            "projects",
                            "events"
                        ],
                        "type": "array"
                    },
                    {
                        "name": "connectType",
                        "in": "formData",
                        "description": "Use case with connectType = \"member\",\"admin\", \"contributor\" or \"attendee\"",
                        "items": {
                            "type": "string"
                        },
                        "enum": [
                            "member",
                            "admin",
                            "contributor",
                            "attendee"
                        ],
                        "type": "array",
                        "collectionFormat": "ssv",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of authenticate.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/Result"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Person": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific organization"
                },
                "name": {
                    "type": "string",
                    "description": "Name of user."
                },
                "description": {
                    "type": "string",
                    "description": "Description of organization."
                }
            }
        },
        "Organization": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific person"
                },
                "name": {
                    "type": "string",
                    "description": "Name of user."
                },
                "description": {
                    "type": "string",
                    "description": "Description of user."
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific event"
                },
                "name": {
                    "type": "string",
                    "description": "Name of user."
                },
                "description": {
                    "type": "string",
                    "description": "Description of event."
                }
            }
        },
        "Project": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific project"
                },
                "name": {
                    "type": "string",
                    "description": "Name of user."
                },
                "description": {
                    "type": "string",
                    "description": "Description of project."
                }
            }
        },
        "Result": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "boolean",
                    "description": "Boolean"
                },
                "msg": {
                    "type": "string",
                    "description": "Message return."
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}